# =======================
# Shiro INI configuration
# =======================

[main]
# 若是认证未通过,自动跳转指定的url
authc.loginUrl = /shiropage/login.html
# 若是没有登录,自动跳转指定的url
roles.loginUrl = /shiropage/login.html
# 登录之后,若是没有指定的角色(权限) ,自动跳转指定的url
roles.unauthorizedUrl = /un.jsp
[users]
# 设置用户信息
# 语法是 username = password, roleName1, roleName2, …, roleNameN
username = password,role1

[roles]
# 角色信息和角色拥有的权限
#语法是 rolename = permissionDefinition1, permissionDefinition2, …, permissionDefinitionN
#权限的语法 * 表示所有权限  一般语法是 权限类型.权限动作.权限的资源id  比如  user:delete:1 表示拥有删除1号用户的权限  user:delete:*表示删除所有用户权限
admin = *
role1 = user:query:*, user:delete:1

[urls]
# web中的url过滤
# anon 匿名用户可访问(未认证,未授权...)
# authc 需登录 org.apache.shiro.web.filter.authc.FormAuthenticationFilter
# perms 需要某些权限  perms[user:delete:1,user:update:2...]细粒度权限控制 org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter
# roles 需要某个角色  roles[role1,role2...] org.apache.shiro.web.filter.authz.RolesAuthorizationFilter
# user 需确认是指定的用户 org.apache.shiro.web.filter.authc.UserFilter

/shiropage/login.html = anon
/loginServlet = anon
/shiropage/suc.jsp = authc
/shiropage/fail.jsp = roles[role2]
